import serial
import datetime
import pvlib

def parse_arduino_data(data):
    data = data.strip().split(',')
    if len(data) == 6:
        latitude = float(data[0])
        longitude = float(data[1])
        x = float(data[2])
        y = float(data[3])
        z = float(data[4])
        angle = float(data[5])
        return latitude, longitude, x, y, z, angle
    return None

def control_stepper_motors(arduino, altitude, azimuth):
    vertical_steps = altitude_to_steps(altitude)
    horizontal_steps = azimuth_to_steps(azimuth)
    command = f"{vertical_steps},{horizontal_steps}\n"
    arduino.write(command.encode())

def altitude_to_steps(altitude):
    step_angle = 1.8  # degrees per step, adjust as needed
    gear_ratio = 1  # adjust as needed
    return int(altitude / (step_angle * gear_ratio))

def azimuth_to_steps(azimuth):
    step_angle = 1.8  # degrees per step, adjust as needed
    gear_ratio = 1  # adjust as needed
    return int(azimuth / (step_angle * gear_ratio))

arduino_port = 'COMX'  # Replace 'COMX' with your Arduino's port
baud_rate = 9600 # Set the baud rate (should match the Arduino's settings)

try:
arduino = serial.Serial(arduino_port, baud_rate)
while True:
    # Read data from Arduino
    arduino_data = arduino.readline().decode()
    
    # Parse the data from Arduino
    parsed_data = parse_arduino_data(arduino_data)
    
    if parsed_data:
        latitude, longitude, x, y, z, angle = parsed_data
        
        # Create a datetime object for the current time
        current_time = datetime.datetime.now()
        
        # Calculate the sun's position using pvlib
        solar_position = pvlib.solarposition.get_solarposition(current_time, latitude, longitude)
        
        # Extract sun's altitude and azimuth
        altitude = solar_position['apparent_elevation'].values[0]
        azimuth = solar_position['azimuth'].values[0]
        
        # Output the data
        print(f"GPS Coordinates - Latitude: {latitude}, Longitude: {longitude}")
        print(f"Compass Data - X: {x}, Y: {y}, Z: {z}, Angle: {angle}")
        print(f"Sun's Altitude: {altitude} degrees")
        print(f"Sun's Azimuth: {azimuth} degrees")
        
        # Control stepper motors based on solar position (CHECK AGAIN IF WORKS )
        control_stepper_motors(arduino, altitude, azimuth)                                                                                                                                                                                                                                                                                                                                                       
        except KeyboardInterrupt:
        print("Program terminated by user.")
        arduino.close() # Close the serial connection
        except serial.SerialException as e:
        print(f"Serial communication error: {e}")
        except Exception as e:
        print(f"An error occurred: {e}")
        finally:
        if arduino.is_open:
        arduino.close()
